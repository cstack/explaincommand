{
  "description": "Build an image from a Dockerfile",
  "flags": [
    {
      "aliases": [
        "--add-host"
      ],
      "description": "      --add-host list           Add a custom host-to-IP mapping (host:ip)",
      "takes_argument": true
    },
    {
      "aliases": [
        "--build-arg"
      ],
      "description": "      --build-arg list          Set build-time variables",
      "takes_argument": true
    },
    {
      "aliases": [
        "--cache-from"
      ],
      "description": "      --cache-from strings      Images to consider as cache sources",
      "takes_argument": true
    },
    {
      "aliases": [
        "--disable-content-trust"
      ],
      "description": "      --disable-content-trust   Skip image verification (default true)",
      "takes_argument": false
    },
    {
      "aliases": [
        "-f",
        "--file"
      ],
      "description": "  -f, --file string             Name of the Dockerfile (Default is 'PATH/Dockerfile')",
      "takes_argument": true
    },
    {
      "aliases": [
        "--iidfile"
      ],
      "description": "      --iidfile string          Write the image ID to the file",
      "takes_argument": true
    },
    {
      "aliases": [
        "--isolation"
      ],
      "description": "      --isolation string        Container isolation technology",
      "takes_argument": true
    },
    {
      "aliases": [
        "--label"
      ],
      "description": "      --label list              Set metadata for an image",
      "takes_argument": true
    },
    {
      "aliases": [
        "--network"
      ],
      "description": "      --network string          Set the networking mode for the RUN instructions during build (default \"default\")",
      "takes_argument": true
    },
    {
      "aliases": [
        "--no-cache"
      ],
      "description": "      --no-cache                Do not use cache when building the image",
      "takes_argument": false
    },
    {
      "aliases": [
        "-o",
        "--output"
      ],
      "description": "  -o, --output stringArray      Output destination (format: type=local,dest=path)",
      "takes_argument": true
    },
    {
      "aliases": [
        "--platform"
      ],
      "description": "      --platform string         Set platform if server is multi-platform capable",
      "takes_argument": true
    },
    {
      "aliases": [
        "--progress"
      ],
      "description": "      --progress string         Set type of progress output (auto, plain, tty). Use plain to show container output (default \"auto\")",
      "takes_argument": true
    },
    {
      "aliases": [
        "--pull"
      ],
      "description": "      --pull                    Always attempt to pull a newer version of the image",
      "takes_argument": false
    },
    {
      "aliases": [
        "-q",
        "--quiet"
      ],
      "description": "  -q, --quiet                   Suppress the build output and print image ID on success",
      "takes_argument": false
    },
    {
      "aliases": [
        "--secret"
      ],
      "description": "      --secret stringArray      Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret",
      "takes_argument": true
    },
    {
      "aliases": [
        "--ssh"
      ],
      "description": "      --ssh stringArray         SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])",
      "takes_argument": true
    },
    {
      "aliases": [
        "-t",
        "--tag"
      ],
      "description": "  -t, --tag list                Name and optionally a tag in the 'name:tag' format",
      "takes_argument": true
    },
    {
      "aliases": [
        "--target"
      ],
      "description": "      --target string           Set the target build stage to build.",
      "takes_argument": true
    }
  ],
  "positional_arguments": [
    {
      "name": "PATH",
      "repeated": false
    },
    {
      "name": "|",
      "repeated": false
    },
    {
      "name": "URL",
      "repeated": false
    },
    {
      "name": "|",
      "repeated": false
    }
  ]
}